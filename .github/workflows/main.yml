name: Policy Check with OPA

on: [push, pull_request]

jobs:
  opa-policy-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/

      - name: Run OPA policy check
        run: |
          # Example input config to validate (could be a Kubernetes YAML, Terraform plan, etc.)
          cat > input.json <<'EOF'
          {
            "containers": [
              {"image": "nginx:latest"},
              {"image": "alpine:3.18"}
            ]
          }
          EOF

          # Policy: deny if image tag == latest
          mkdir -p policy
          cat > policy/policy.rego <<'EOF'
          package cicd

          deny[msg] {
            some c
            input.containers[c].image
            endswith(input.containers[c].image, ":latest")
            msg := sprintf("Container %v is using 'latest' tag, not allowed", [input.containers[c].image])
          }
          EOF

          # Run OPA check
          opa eval --data policy --input input.json "data.cicd.deny" | tee result.txt

          # Fail pipeline if violations exist
          if grep -q "not allowed" result.txt; then
            echo "❌ Policy violations found!"
            exit 1
          else
            echo "✅ All policies passed"
          fi
